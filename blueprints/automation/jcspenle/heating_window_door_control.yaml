blueprint:
  name: Heating Control - Window/Door Open Detection
  source_url: https://raw.githubusercontent.com/jcspenle/HA_SensorPilotWire/main/blueprints/automation/jcspenle/heating_window_door_control.yaml
  description: >
    Automated heating control with window/door sensors.
    - Windows: immediate action; Doors: action after a configurable delay (default 4 minutes).
    - Configurable modes when open/closed (comfort, comfort-1, comfort-2, eco, off).
    - Automation status selector (Activated / Bypass).
    - Window sensors required; door sensors optional.
  domain: automation

  input:
    automation_status:
      name: Automation status
      description: Choose 'Activated' to enable logic or 'Bypass' to disable it.
      selector:
        select:
          options: ["Activated","Bypass"]
      default: "Activated"

    climate_entity:
      name: Climate Entity (Heater)
      selector:
        entity:
          domain: climate

    window_sensors:
      name: Window Sensors (required)
      description: Select one or more window sensors for this room.
      selector:
        entity:
          domain: binary_sensor
          device_class: window
          multiple: true

    door_sensors:
      name: Door Sensors (optional)
      description: Select door sensors for this room (delay before action applies). Leave empty if none.
      selector:
        entity:
          domain: binary_sensor
          device_class: door
          multiple: true
      default: []

    door_open_delay:
      name: Door open delay
      description: Minimum continuous open time before action for DOOR sensors.
      selector:
        duration: {}
      default:
        hours: 0
        minutes: 4
        seconds: 0

    mode_when_open:
      name: Mode When Open
      description: Climate preset when any window is open (immediate) or any door is open for the delay.
      selector:
        select:
          options: ["comfort","comfort-1","comfort-2","eco","off"]
      default: "off"

    mode_when_closed:
      name: Mode When Closed
      description: Climate preset when ALL sensors are closed (restore mode).
      selector:
        select:
          options: ["comfort","comfort-1","comfort-2","eco","off"]
      default: "comfort"

# ===== Variables =====
variables:
  status: !input automation_status
  climate: !input climate_entity
  open_mode: !input mode_when_open
  closed_mode: !input mode_when_closed
  windows: !input window_sensors
  doors: !input door_sensors
  door_delay: !input door_open_delay
  all_sensors: >
    {{ (windows | default([])) + (doors | default([])) }}
  has_doors: >
    {{ (doors | default([]) | length) > 0 }}

# ===== Triggers =====
trigger:
  # Windows opened (immediate)
  - platform: state
    entity_id: !input window_sensors
    to: "on"
    id: window_opened

  # Windows closed
  - platform: state
    entity_id: !input window_sensors
    to: "off"
    id: sensor_closed

  # Template trigger for doors (only fires if doors exist)
  - platform: template
    value_template: >
      {% set door_list = doors | default([]) %}
      {{ door_list | length > 0 and 
         expand(door_list) | selectattr('state','eq','on') | list | length > 0 }}
    id: door_opened

  # Template trigger for door closed (only fires if doors exist)
  - platform: template
    value_template: >
      {% set door_list = doors | default([]) %}
      {{ door_list | length > 0 and 
         expand(door_list) | selectattr('state','eq','off') | list | length > 0 }}
    id: sensor_closed

# ===== Conditions =====
condition:
  # Must be activated via status
  - condition: template
    value_template: "{{ status == 'Activated' }}"
  # Require at least one window sensor selected
  - condition: template
    value_template: "{{ (windows | default([])) | length > 0 }}"

# ===== Actions =====
action:
  - choose:
      # === WINDOW OPENED (immediate action) ===
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'window_opened' }}"
        sequence:
          # Apply OPEN mode immediately
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ open_mode == 'off' }}"
                sequence:
                  - service: climate.turn_off
                    target:
                      entity_id: !input climate_entity
            default:
              - service: climate.set_preset_mode
                target:
                  entity_id: !input climate_entity
                data:
                  preset_mode: "{{ open_mode }}"

      # === DOOR OPENED (with delay) ===
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'door_opened' }}"
        sequence:
          # Wait configured delay
          - delay: !input door_open_delay
          # Verify at least one door is still open
          - condition: template
            value_template: >
              {{ expand(doors) | selectattr('state','eq','on') | list | length > 0 }}
          # Apply OPEN mode
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ open_mode == 'off' }}"
                sequence:
                  - service: climate.turn_off
                    target:
                      entity_id: !input climate_entity
            default:
              - service: climate.set_preset_mode
                target:
                  entity_id: !input climate_entity
                data:
                  preset_mode: "{{ open_mode }}"

      # === SENSOR CLOSED (all closed = restore) ===
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'sensor_closed' }}"
          # Verify ALL sensors are now closed
          - condition: template
            value_template: >
              {{ expand(all_sensors) | selectattr('state','eq','on') | list | length == 0 }}
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ closed_mode == 'off' }}"
                sequence:
                  - service: climate.turn_off
                    target:
                      entity_id: !input climate_entity
            default:
              - service: climate.turn_on
                target:
                  entity_id: !input climate_entity
              - service: climate.set_preset_mode
                target:
                  entity_id: !input climate_entity
                data:
                  preset_mode: "{{ closed_mode }}"
    default: []

mode: single
